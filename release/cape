Help on module cgi:

NNAAMMEE
    cgi - Support module for CGI (Common Gateway Interface) scripts.

FFIILLEE
    /usr/local/python-2.7.10/lib/python2.7/cgi.py

DDEESSCCRRIIPPTTIIOONN
    This module defines a number of utilities for use by CGI scripts
    written in Python.

CCLLAASSSSEESS
    UserDict.UserDict
        FormContentDict
            FormContent
            SvFormContentDict
                InterpFormContentDict
    FieldStorage
    MiniFieldStorage
    
    class FFiieellddSSttoorraaggee
     |  Store a sequence of fields, reading multipart/form-data.
     |  
     |  This class provides naming, typing, files stored on disk, and
     |  more.  At the top level, it is accessible like a dictionary, whose
     |  keys are the field names.  (Note: None can occur as a field name.)
     |  The items are either a Python list (if there's multiple values) or
     |  another FieldStorage or MiniFieldStorage object.  If it's a single
     |  object, it has the following attributes:
     |  
     |  name: the field name, if specified; otherwise None
     |  
     |  filename: the filename, if specified; otherwise None; this is the
     |      client side filename, *not* the file name on which it is
     |      stored (that's a temporary file you don't deal with)
     |  
     |  value: the value as a *string*; for file uploads, this
     |      transparently reads the file every time you request the value
     |  
     |  file: the file(-like) object from which you can read the data;
     |      None if the data is stored a simple string
     |  
     |  type: the content-type, or None if not specified
     |  
     |  type_options: dictionary of options specified on the content-type
     |      line
     |  
     |  disposition: content-disposition, or None if not specified
     |  
     |  disposition_options: dictionary of corresponding options
     |  
     |  headers: a dictionary(-like) object (sometimes rfc822.Message or a
     |      subclass thereof) containing *all* headers
     |  
     |  The class is subclassable, mostly for the purpose of overriding
     |  the make_file() method, which is called internally to come up with
     |  a file open for reading and writing.  This makes it possible to
     |  override the default choice of storing all files in a temporary
     |  directory and unlinking them as soon as they have been opened.
     |  
     |  Methods defined here:
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |      Dictionary style __contains__ method.
     |  
     |  ____ggeettaattttrr____(self, name)
     |  
     |  ____ggeettiitteemm____(self, key)
     |      Dictionary style indexing.
     |  
     |  ____iinniitt____(self, fp=None, headers=None, outerboundary='', environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'}, keep_blank_values=0, strict_parsing=0)
     |      Constructor.  Read multipart/* until last part.
     |      
     |      Arguments, all optional:
     |      
     |      fp              : file pointer; default: sys.stdin
     |          (not used when the request method is GET)
     |      
     |      headers         : header dictionary-like object; default:
     |          taken from environ as per CGI spec
     |      
     |      outerboundary   : terminating multipart boundary
     |          (for internal use only)
     |      
     |      environ         : environment dictionary; default: os.environ
     |      
     |      keep_blank_values: flag indicating whether blank values in
     |          percent-encoded forms should be treated as blank strings.
     |          A true value indicates that blanks should be retained as
     |          blank strings.  The default false value indicates that
     |          blank values are to be ignored and treated as if they were
     |          not included.
     |      
     |      strict_parsing: flag indicating what to do with parsing errors.
     |          If false (the default), errors are silently ignored.
     |          If true, errors raise a ValueError exception.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |      Dictionary style len(x) support.
     |  
     |  ____nnoonnzzeerroo____(self)
     |  
     |  ____rreepprr____(self)
     |      Return a printable representation.
     |  
     |  ggeettffiirrsstt(self, key, default=None)
     |      Return the first value received.
     |  
     |  ggeettlliisstt(self, key)
     |      Return list of received values.
     |  
     |  ggeettvvaalluuee(self, key, default=None)
     |      Dictionary style get() method, including 'value' lookup.
     |  
     |  hhaass__kkeeyy(self, key)
     |      Dictionary style has_key() method.
     |  
     |  kkeeyyss(self)
     |      Dictionary style keys() method.
     |  
     |  mmaakkee__ffiillee(self, binary=None)
     |      Overridable: return a readable & writable file.
     |      
     |      The file will be used as follows:
     |      - data is written to it
     |      - seek(0)
     |      - data is read from it
     |      
     |      The 'binary' argument is unused -- the file is always opened
     |      in binary mode.
     |      
     |      This version opens a temporary file for reading and writing,
     |      and immediately deletes (unlinks) it.  The trick (on Unix!) is
     |      that the file can still be used, but it can't be opened by
     |      another process, and it will automatically be deleted when it
     |      is closed or when the current process terminates.
     |      
     |      If you want a more permanent file, you derive a class which
     |      overrides this method.  If you want a visible temporary file
     |      that is nevertheless automatically deleted when the script
     |      terminates, try defining a __del__ method in a derived class
     |      which unlinks the temporary files you have created.
     |  
     |  rreeaadd__bbiinnaarryy(self)
     |      Internal: read binary data.
     |  
     |  rreeaadd__lliinneess(self)
     |      Internal: read lines until EOF or outerboundary.
     |  
     |  rreeaadd__lliinneess__ttoo__eeooff(self)
     |      Internal: read lines until EOF.
     |  
     |  rreeaadd__lliinneess__ttoo__oouutteerrbboouunnddaarryy(self)
     |      Internal: read lines until outerboundary.
     |  
     |  rreeaadd__mmuullttii(self, environ, keep_blank_values, strict_parsing)
     |      Internal: read a part that is itself multipart.
     |  
     |  rreeaadd__ssiinnggllee(self)
     |      Internal: read an atomic part.
     |  
     |  rreeaadd__uurrlleennccooddeedd(self)
     |      Internal: read data in query string format.
     |  
     |  sskkiipp__lliinneess(self)
     |      Internal: skip lines until outer boundary if defined.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  FFiieellddSSttoorraaggeeCCllaassss = None
     |  
     |  bbuuffssiizzee = 8192
    
    class FFoorrmmCCoonntteenntt(FormContentDict)
     |  This class is present for backwards compatibility only.
     |  
     |  Method resolution order:
     |      FormContent
     |      FormContentDict
     |      UserDict.UserDict
     |  
     |  Methods defined here:
     |  
     |  iinnddeexxeedd__vvaalluuee(self, key, location)
     |  
     |  lleennggtthh(self, key)
     |  
     |  ppaarrss(self)
     |  
     |  ssttrriippppeedd(self, key)
     |  
     |  vvaalluuee(self, key)
     |  
     |  vvaalluueess(self, key)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FormContentDict:
     |  
     |  ____iinniitt____(self, environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'}, keep_blank_values=0, strict_parsing=0)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from UserDict.UserDict:
     |  
     |  ____ccmmpp____(self, dict)
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |  
     |  ____sseettiitteemm____(self, key, item)
     |  
     |  cclleeaarr(self)
     |  
     |  ccooppyy(self)
     |  
     |  ggeett(self, key, failobj=None)
     |  
     |  hhaass__kkeeyy(self, key)
     |  
     |  iitteemmss(self)
     |  
     |  iitteerriitteemmss(self)
     |  
     |  iitteerrkkeeyyss(self)
     |  
     |  iitteerrvvaalluueess(self)
     |  
     |  kkeeyyss(self)
     |  
     |  ppoopp(self, key, *args)
     |  
     |  ppooppiitteemm(self)
     |  
     |  sseettddeeffaauulltt(self, key, failobj=None)
     |  
     |  uuppddaattee(self, dict=None, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from UserDict.UserDict:
     |  
     |  ffrroommkkeeyyss(cls, iterable, value=None) from __builtin__.classobj
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from UserDict.UserDict:
     |  
     |  ____hhaasshh____ = None
    
    class FFoorrmmCCoonntteennttDDiicctt(UserDict.UserDict)
     |  Form content as dictionary with a list of values per field.
     |  
     |  form = FormContentDict()
     |  
     |  form[key] -> [value, value, ...]
     |  key in form -> Boolean
     |  form.keys() -> [key, key, ...]
     |  form.values() -> [[val, val, ...], [val, val, ...], ...]
     |  form.items() ->  [(key, [val, val, ...]), (key, [val, val, ...]), ...]
     |  form.dict == {key: [val, val, ...], ...}
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'}, keep_blank_values=0, strict_parsing=0)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from UserDict.UserDict:
     |  
     |  ____ccmmpp____(self, dict)
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |  
     |  ____sseettiitteemm____(self, key, item)
     |  
     |  cclleeaarr(self)
     |  
     |  ccooppyy(self)
     |  
     |  ggeett(self, key, failobj=None)
     |  
     |  hhaass__kkeeyy(self, key)
     |  
     |  iitteemmss(self)
     |  
     |  iitteerriitteemmss(self)
     |  
     |  iitteerrkkeeyyss(self)
     |  
     |  iitteerrvvaalluueess(self)
     |  
     |  kkeeyyss(self)
     |  
     |  ppoopp(self, key, *args)
     |  
     |  ppooppiitteemm(self)
     |  
     |  sseettddeeffaauulltt(self, key, failobj=None)
     |  
     |  uuppddaattee(self, dict=None, **kwargs)
     |  
     |  vvaalluueess(self)
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from UserDict.UserDict:
     |  
     |  ffrroommkkeeyyss(cls, iterable, value=None) from __builtin__.classobj
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from UserDict.UserDict:
     |  
     |  ____hhaasshh____ = None
    
    class IInntteerrppFFoorrmmCCoonntteennttDDiicctt(SvFormContentDict)
     |  This class is present for backwards compatibility only.
     |  
     |  Method resolution order:
     |      InterpFormContentDict
     |      SvFormContentDict
     |      FormContentDict
     |      UserDict.UserDict
     |  
     |  Methods defined here:
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  iitteemmss(self)
     |  
     |  vvaalluueess(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from SvFormContentDict:
     |  
     |  ggeettlliisstt(self, key)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FormContentDict:
     |  
     |  ____iinniitt____(self, environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'}, keep_blank_values=0, strict_parsing=0)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from UserDict.UserDict:
     |  
     |  ____ccmmpp____(self, dict)
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |  
     |  ____sseettiitteemm____(self, key, item)
     |  
     |  cclleeaarr(self)
     |  
     |  ccooppyy(self)
     |  
     |  ggeett(self, key, failobj=None)
     |  
     |  hhaass__kkeeyy(self, key)
     |  
     |  iitteerriitteemmss(self)
     |  
     |  iitteerrkkeeyyss(self)
     |  
     |  iitteerrvvaalluueess(self)
     |  
     |  kkeeyyss(self)
     |  
     |  ppoopp(self, key, *args)
     |  
     |  ppooppiitteemm(self)
     |  
     |  sseettddeeffaauulltt(self, key, failobj=None)
     |  
     |  uuppddaattee(self, dict=None, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from UserDict.UserDict:
     |  
     |  ffrroommkkeeyyss(cls, iterable, value=None) from __builtin__.classobj
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from UserDict.UserDict:
     |  
     |  ____hhaasshh____ = None
    
    class MMiinniiFFiieellddSSttoorraaggee
     |  Like FieldStorage, for use when no file uploads are possible.
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, name, value)
     |      Constructor from field name and value.
     |  
     |  ____rreepprr____(self)
     |      Return printable representation.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ddiissppoossiittiioonn = None
     |  
     |  ddiissppoossiittiioonn__ooppttiioonnss = {}
     |  
     |  ffiillee = None
     |  
     |  ffiilleennaammee = None
     |  
     |  hheeaaddeerrss = {}
     |  
     |  lliisstt = None
     |  
     |  ttyyppee = None
     |  
     |  ttyyppee__ooppttiioonnss = {}
    
    class SSvvFFoorrmmCCoonntteennttDDiicctt(FormContentDict)
     |  Form content as dictionary expecting a single value per field.
     |  
     |  If you only expect a single value for each field, then form[key]
     |  will return that single value.  It will raise an IndexError if
     |  that expectation is not true.  If you expect a field to have
     |  possible multiple values, than you can use form.getlist(key) to
     |  get all of the values.  values() and items() are a compromise:
     |  they return single strings where there is a single value, and
     |  lists of strings otherwise.
     |  
     |  Method resolution order:
     |      SvFormContentDict
     |      FormContentDict
     |      UserDict.UserDict
     |  
     |  Methods defined here:
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  ggeettlliisstt(self, key)
     |  
     |  iitteemmss(self)
     |  
     |  vvaalluueess(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from FormContentDict:
     |  
     |  ____iinniitt____(self, environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'}, keep_blank_values=0, strict_parsing=0)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from UserDict.UserDict:
     |  
     |  ____ccmmpp____(self, dict)
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |  
     |  ____sseettiitteemm____(self, key, item)
     |  
     |  cclleeaarr(self)
     |  
     |  ccooppyy(self)
     |  
     |  ggeett(self, key, failobj=None)
     |  
     |  hhaass__kkeeyy(self, key)
     |  
     |  iitteerriitteemmss(self)
     |  
     |  iitteerrkkeeyyss(self)
     |  
     |  iitteerrvvaalluueess(self)
     |  
     |  kkeeyyss(self)
     |  
     |  ppoopp(self, key, *args)
     |  
     |  ppooppiitteemm(self)
     |  
     |  sseettddeeffaauulltt(self, key, failobj=None)
     |  
     |  uuppddaattee(self, dict=None, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from UserDict.UserDict:
     |  
     |  ffrroommkkeeyyss(cls, iterable, value=None) from __builtin__.classobj
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from UserDict.UserDict:
     |  
     |  ____hhaasshh____ = None

FFUUNNCCTTIIOONNSS
    eessccaappee(s, quote=None)
        Replace special characters "&", "<" and ">" to HTML-safe sequences.
        If the optional flag quote is true, the quotation mark character (")
        is also translated.
    
    ppaarrssee(fp=None, environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'}, keep_blank_values=0, strict_parsing=0)
        Parse a query in the environment or from a file (default stdin)
        
        Arguments, all optional:
        
        fp              : file pointer; default: sys.stdin
        
        environ         : environment dictionary; default: os.environ
        
        keep_blank_values: flag indicating whether blank values in
            percent-encoded forms should be treated as blank strings.
            A true value indicates that blanks should be retained as
            blank strings.  The default false value indicates that
            blank values are to be ignored and treated as if they were
            not included.
        
        strict_parsing: flag indicating what to do with parsing errors.
            If false (the default), errors are silently ignored.
            If true, errors raise a ValueError exception.
    
    ppaarrssee__hheeaaddeerr(line)
        Parse a Content-type like header.
        
        Return the main content-type and a dictionary of options.
    
    ppaarrssee__mmuullttiippaarrtt(fp, pdict)
        Parse multipart input.
        
        Arguments:
        fp   : input file
        pdict: dictionary containing other parameters of content-type header
        
        Returns a dictionary just like parse_qs(): keys are the field names, each
        value is a list of values for that field.  This is easy to use but not
        much good if you are expecting megabytes to be uploaded -- in that case,
        use the FieldStorage class instead which is much more flexible.  Note
        that content-type is the raw, unparsed contents of the content-type
        header.
        
        XXX This does not parse nested multipart parts -- use FieldStorage for
        that.
        
        XXX This should really be subsumed by FieldStorage altogether -- no
        point in having two implementations of the same parsing algorithm.
        Also, FieldStorage protects itself better against certain DoS attacks
        by limiting the size of the data read in one chunk.  The API here
        does not support that kind of protection.  This also affects parse()
        since it can call parse_multipart().
    
    ppaarrssee__qqss(qs, keep_blank_values=0, strict_parsing=0)
        Parse a query given as a string argument.
    
    ppaarrssee__qqssll(qs, keep_blank_values=0, strict_parsing=0)
        Parse a query given as a string argument.
    
    pprriinntt__aarrgguummeennttss()
    
    pprriinntt__ddiirreeccttoorryy()
        Dump the current directory as HTML.
    
    pprriinntt__eennvviirroonn(environ={'HISTTIMEFORMAT': '%F %T ', 'LESSOPEN': '|/usr/...axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'})
        Dump the shell environment as HTML.
    
    pprriinntt__eennvviirroonn__uussaaggee()
        Dump a list of environment variables used by CGI as HTML.
    
    pprriinntt__eexxcceeppttiioonn(type=None, value=None, tb=None, limit=None)
    
    pprriinntt__ffoorrmm(form)
        Dump the contents of a form as HTML.

DDAATTAA
    ____aallll____ = ['MiniFieldStorage', 'FieldStorage', 'FormContentDict', 'SvF...
    ____vveerrssiioonn____ = '2.6'

VVEERRSSIIOONN
    2.6

